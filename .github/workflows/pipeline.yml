name: Deployment pipeline

permissions:
  contents: write  # Grants permission to create tags

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install backend dependencies
        run: npm install
        working-directory: backend

      - name: Install frontend dependencies
        run: npm install
        working-directory: frontend

      - name: Check style
        run: npm run lint
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend

      - name: Move frontend build to backend
        run: |
          rm -rf backend/dist
          mv frontend/dist backend/

      - name: Start backend
        run: npm start &
        working-directory: backend

      - name: Wait for backend to be ready
        run: npx wait-on http://localhost:3000/info --timeout 120000
        working-directory: backend

      - name: Run end-to-end tests (Cypress)
        uses: cypress-io/github-action@v5
        with:
          working-directory: backend
          command: npm run test:e2e

      - name: Notify Discord on Success
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "Build succeeded! Commit: ${{ github.sha }}"

      - name: Notify Discord on Failure
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            Build failed! Commit: ${{ github.sha }}
            **Author:** ${{ github.actor }}
            **Commit message:** ${{ github.event.head_commit.message }}

  deploy:
    if: github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip')
    needs: simple_deployment_pipeline
    runs-on: ubuntu-latest
    concurrency: deploy-group
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        working-directory: backend
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Notify Discord on Deployment Success
        if: success()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: "Deployment successful! Commit: ${{ github.sha }}"

      - name: Notify Discord on Deployment Failure
        if: failure()
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: |
            Deployment failed! Commit: ${{ github.sha }}
            **Author:** ${{ github.actor }}
            **Commit message:** ${{ github.event.head_commit.message }}

  tag_release:
    if: github.event_name == 'push' && !contains(toJson(github.event.commits.*.message), '#skip')
    needs: [simple_deployment_pipeline, deploy]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
